name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: cargo-fmt
        run: cargo fmt --all -- --check

  cargo-machete:
    name: cargo-machete
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Machete
        uses: bnjbvr/cargo-machete@main

  grcov:
    name: grcov
    runs-on: ubuntu-24.04
    if: ${{ github.repository_owner == 'qryxip' && github.ref == 'refs/heads/master' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Resolve `grcov ^0.8`
        id: resolve-versions
        run: |
          OUTPUT=$(python .github/scripts/resolve-versions.py grcov@^0.8)
          echo "$OUTPUT" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/grcov
          key: grcov-${{ steps.resolve-versions.outputs.grcov }}

      - name: Install grcov v${{ steps.resolve-versions.outputs.grcov }}
        run: cargo install grcov --version '=${{ steps.resolve-versions.outputs.grcov }}'

      - name: cargo-test
        run: cargo +nightly test --no-fail-fast --features __test_with_credentials
        env:
          RUSTFLAGS: '-Zinstrument-coverage'
          RUST_BACKTRACE: full
          LLVM_PROFILE_FILE: '%p-%m.profraw'
          ATCODER_USERNAME: ${{ secrets.ATCODER_USERNAME }}
          ATCODER_PASSWORD: ${{ secrets.ATCODER_PASSWORD }}

      - name: grcov
        run: grcov . -b ./target/debug -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info

  build:
    strategy:
      fail-fast: false
      matrix:
        name:
          - stable-x86_64-pc-windows-msvc
          - stable-x86_64-apple-darwin
          - stable-x86_64-unknown-linux-gnu
        include:
          - { name: stable-x86_64-pc-windows-msvc  , channel: stable, target-triple: x86_64-pc-windows-msvc   , host-triple: x86_64-pc-windows-msvc  , os: windows-2022 }
          - { name: stable-x86_64-apple-darwin     , channel: stable, target-triple: x86_64-apple-darwin      , host-triple: x86_64-apple-darwin     , os: macos-13     }
          - { name: stable-x86_64-unknown-linux-gnu, channel: stable, target-triple: x86_64-unknown-linux-gnu , host-triple: x86_64-unknown-linux-gnu, os: ubuntu-24.04 }

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Disable `core.autocrlf`
        run: git config --global core.autocrlf false
        if: ${{ matrix.os == 'windows-2022' }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Set up `${{ matrix.channel }}-${{ matrix.host-triple }}` (target: `${{ matrix.target-triple }}`)'
        id: install-toolchain
        uses: dtolnay/rust-toolchain@${{ matrix.channel }}
        with:
          targets: ${{ matrix.target-triple }}
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.name }}

      - name: cargo-clippy
        run: cargo clippy --all-targets --target ${{ matrix.target-triple }} -- -D warnings

      - name: cargo-clippy (with `__test_with_credentials`)
        run: cargo clippy --all-targets --features __test_with_credentials --target ${{ matrix.target-triple }} -- -D warnings

      - name: Determine `cargo test` features
        id: cargo-test-features
        run: |
          if ${{ !!secrets.ATCODER_USERNAME }}; then
            echo 'features=--features __test_with_credentials' >> $GITHUB_OUTPUT
          else
            echo 'features=' >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: cargo-test
        run: cargo test --no-fail-fast ${{ steps.cargo-test-features.outputs.features }} --target ${{ matrix.target-triple }}
        env:
          RUST_BACKTRACE: full
          ATCODER_USERNAME: ${{ secrets.ATCODER_USERNAME }}
          ATCODER_PASSWORD: ${{ secrets.ATCODER_PASSWORD }}
        if: false # perhaps AtCoder no longer allows tests like ours